{"name": "实时同步糖尿病高危、疑似接口的测试用例", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <class 'testcase.test_icdm_diabetes_patient.TestDiabetesPatient'>\n\n    def setup_class(self):\n        # 获取session对象\n        self.session = requests.session()\n        # 调用成功获取token接口\n>       ApiGetToken().get_token_success(self.session)\n\ntestcase\\test_icdm_diabetes_patient.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi\\api_get_token.py:60: in get_token_success\n    setting.access_token = response.json().get('access_token')  # 产生数据，并把数据放到setting当中\nd:\\anaconda3\\lib\\site-packages\\requests\\models.py:900: in json\n    return complexjson.loads(self.text, **kwargs)\nd:\\anaconda3\\lib\\json\\__init__.py:348: in loads\n    return _default_decoder.decode(s)\nd:\\anaconda3\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001EFA284F160>\ns = '<!doctype html><html lang=\"en\"><head><title>HTTP Status 404 – Not Found</title><style type=\"text/css\">h1 {font-family...ource or is not willing to disclose that one exists.</p><hr class=\"line\" /><h3>Apache Tomcat/8.5.41</h3></body></html>'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\nd:\\anaconda3\\lib\\json\\decoder.py:355: JSONDecodeError"}, "description": "\n        测试第三方接口是否能够实时同步糖尿病高危、疑似患者\n        前置：成功获取token\n        ", "attachments": [{"name": "log", "source": "38771d21-8f6a-4b46-a21e-a3b7407171b6-attachment.txt", "type": "text/plain"}], "start": 1616390931041, "stop": 1616390931041, "uuid": "7151e880-a813-4d06-bf9e-119ac1a1382d", "historyId": "8a070f459f355eb551e3cefc19d24777", "testCaseId": "92318730f159f5474f2206d64f4033e5", "fullName": "testcase.test_icdm_diabetes_patient.TestDiabetesPatient#test_diabetes_patient", "labels": [{"name": "feature", "value": "第三方实时同步模块"}, {"name": "story", "value": "用户正常登录后，第三方实时同步糖尿病高危、疑似接口"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_icdm_diabetes_patient"}, {"name": "subSuite", "value": "TestDiabetesPatient"}, {"name": "host", "value": "DESKTOP-E36IH3B"}, {"name": "thread", "value": "19336-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_icdm_diabetes_patient"}]}